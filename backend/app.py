# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19AxU1sUREZWiOzYlSQL8XTa46Wl3gwe-
"""

from flask import Flask, request, jsonify
from pydantic import BaseModel, ValidationError
from datetime import datetime

app = Flask(__name__)

# Temporary in-memory storage (replace with PostgreSQL/PostGIS later)
weather_data_store = []
alerts_store = []

# --- Pydantic models for validation ---
class WeatherData(BaseModel):
    station_id: str
    temperature: float
    humidity: float
    wind_speed: float
    timestamp: datetime

class AlertData(BaseModel):
    region: str
    alert_type: str
    message: str
    timestamp: datetime

# --- API endpoint to receive weather data ---
@app.route("/api/weather", methods=["POST"])
def receive_weather():
    try:
        data = WeatherData(**request.json)
    except ValidationError as e:
        return jsonify({"error": e.errors()}), 400

    # Store data (later: write to PostGIS)
    weather_data_store.append(data.dict())
    return jsonify({"status": "success", "message": "Weather data received"}), 201

# --- API endpoint to send alerts ---
@app.route("/api/alerts", methods=["POST"])
def send_alert():
    try:
        data = AlertData(**request.json)
    except ValidationError as e:
        return jsonify({"error": e.errors()}), 400

    # Store alert (later: push notifications / DB insert)
    alerts_store.append(data.dict())
    return jsonify({"status": "success", "message": "Alert information stored"}), 201

# --- Debug endpoints to view stored data ---
@app.route("/api/debug/weather", methods=["GET"])
def get_weather_data():
    return jsonify(weather_data_store)

@app.route("/api/debug/alerts", methods=["GET"])
def get_alerts():
    return jsonify(alerts_store)

@app.route("/health", methods=["GET"])
def health_check():
    return jsonify({"status": "ok"})

if __name__ == "__main__":
    app.run(debug=True)